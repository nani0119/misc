// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calc_add.proto

#include "calc_add.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace Calculation {
class NumDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Num> _instance;
} _Num_default_instance_;
class AddendDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Addend> _instance;
} _Addend_default_instance_;
class SumDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Sum> _instance;
} _Sum_default_instance_;
}  // namespace Calculation
static void InitDefaultsscc_info_Addend_calc_5fadd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calculation::_Addend_default_instance_;
    new (ptr) ::Calculation::Addend();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calculation::Addend::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Addend_calc_5fadd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Addend_calc_5fadd_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_Num_calc_5fadd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calculation::_Num_default_instance_;
    new (ptr) ::Calculation::Num();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calculation::Num::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Num_calc_5fadd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Num_calc_5fadd_2eproto}, {}};

static void InitDefaultsscc_info_Sum_calc_5fadd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calculation::_Sum_default_instance_;
    new (ptr) ::Calculation::Sum();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calculation::Sum::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Sum_calc_5fadd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Sum_calc_5fadd_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_calc_5fadd_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_calc_5fadd_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_calc_5fadd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_calc_5fadd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Calculation::Num, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Calculation::Num, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Calculation::Addend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Calculation::Addend, add1_),
  PROTOBUF_FIELD_OFFSET(::Calculation::Addend, add2_),
  PROTOBUF_FIELD_OFFSET(::Calculation::Addend, last_updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Calculation::Sum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Calculation::Sum, num_),
  PROTOBUF_FIELD_OFFSET(::Calculation::Sum, last_updated_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Calculation::Num)},
  { 6, -1, sizeof(::Calculation::Addend)},
  { 14, -1, sizeof(::Calculation::Sum)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Calculation::_Num_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Calculation::_Addend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Calculation::_Sum_default_instance_),
};

const char descriptor_table_protodef_calc_5fadd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016calc_add.proto\022\013Calculation\032\037google/pr"
  "otobuf/timestamp.proto\032\033google/protobuf/"
  "empty.proto\"\022\n\003Num\022\013\n\003num\030\001 \003(\005\"V\n\006Adden"
  "d\022\014\n\004add1\030\001 \001(\005\022\014\n\004add2\030\002 \001(\005\0220\n\014last_up"
  "dated\030\003 \001(\0132\032.google.protobuf.Timestamp\""
  "D\n\003Sum\022\013\n\003num\030\001 \001(\005\0220\n\014last_updated\030\002 \001("
  "\0132\032.google.protobuf.Timestamp2\366\001\n\020Calcul"
  "ateService\0223\n\naddTwoInts\022\023.Calculation.A"
  "ddend\032\020.Calculation.Sum\0220\n\010addTotal\022\020.Ca"
  "lculation.Num\032\020.Calculation.Sum(\001\022<\n\016get"
  "RamdomTotal\022\026.google.protobuf.Empty\032\020.Ca"
  "lculation.Num0\001\022=\n\023exchangeRamdomTotal\022\020"
  ".Calculation.Num\032\020.Calculation.Num(\0010\001b\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_calc_5fadd_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_calc_5fadd_2eproto_sccs[3] = {
  &scc_info_Addend_calc_5fadd_2eproto.base,
  &scc_info_Num_calc_5fadd_2eproto.base,
  &scc_info_Sum_calc_5fadd_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_calc_5fadd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_calc_5fadd_2eproto = {
  false, false, descriptor_table_protodef_calc_5fadd_2eproto, "calc_add.proto", 526,
  &descriptor_table_calc_5fadd_2eproto_once, descriptor_table_calc_5fadd_2eproto_sccs, descriptor_table_calc_5fadd_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_calc_5fadd_2eproto::offsets,
  file_level_metadata_calc_5fadd_2eproto, 3, file_level_enum_descriptors_calc_5fadd_2eproto, file_level_service_descriptors_calc_5fadd_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_calc_5fadd_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_calc_5fadd_2eproto)), true);
namespace Calculation {

// ===================================================================

void Num::InitAsDefaultInstance() {
}
class Num::_Internal {
 public:
};

Num::Num(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  num_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Calculation.Num)
}
Num::Num(const Num& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      num_(from.num_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Calculation.Num)
}

void Num::SharedCtor() {
}

Num::~Num() {
  // @@protoc_insertion_point(destructor:Calculation.Num)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Num::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Num::ArenaDtor(void* object) {
  Num* _this = reinterpret_cast< Num* >(object);
  (void)_this;
}
void Num::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Num::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Num& Num::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Num_calc_5fadd_2eproto.base);
  return *internal_default_instance();
}


void Num::Clear() {
// @@protoc_insertion_point(message_clear_start:Calculation.Num)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Num::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_num(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_num(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Num::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculation.Num)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 num = 1;
  {
    int byte_size = _num_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_num(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Calculation.Num)
  return target;
}

size_t Num::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calculation.Num)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 num = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->num_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _num_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Num::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Calculation.Num)
  GOOGLE_DCHECK_NE(&from, this);
  const Num* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Num>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Calculation.Num)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Calculation.Num)
    MergeFrom(*source);
  }
}

void Num::MergeFrom(const Num& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calculation.Num)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  num_.MergeFrom(from.num_);
}

void Num::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Calculation.Num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Num::CopyFrom(const Num& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calculation.Num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Num::IsInitialized() const {
  return true;
}

void Num::InternalSwap(Num* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  num_.InternalSwap(&other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Num::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Addend::InitAsDefaultInstance() {
  ::Calculation::_Addend_default_instance_._instance.get_mutable()->last_updated_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Addend::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const Addend* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Addend::_Internal::last_updated(const Addend* msg) {
  return *msg->last_updated_;
}
void Addend::clear_last_updated() {
  if (GetArena() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
Addend::Addend(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Calculation.Addend)
}
Addend::Addend(const Addend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_last_updated()) {
    last_updated_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  ::memcpy(&add1_, &from.add1_,
    static_cast<size_t>(reinterpret_cast<char*>(&add2_) -
    reinterpret_cast<char*>(&add1_)) + sizeof(add2_));
  // @@protoc_insertion_point(copy_constructor:Calculation.Addend)
}

void Addend::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Addend_calc_5fadd_2eproto.base);
  ::memset(&last_updated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add2_) -
      reinterpret_cast<char*>(&last_updated_)) + sizeof(add2_));
}

Addend::~Addend() {
  // @@protoc_insertion_point(destructor:Calculation.Addend)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Addend::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete last_updated_;
}

void Addend::ArenaDtor(void* object) {
  Addend* _this = reinterpret_cast< Addend* >(object);
  (void)_this;
}
void Addend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Addend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Addend& Addend::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Addend_calc_5fadd_2eproto.base);
  return *internal_default_instance();
}


void Addend::Clear() {
// @@protoc_insertion_point(message_clear_start:Calculation.Addend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  ::memset(&add1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add2_) -
      reinterpret_cast<char*>(&add1_)) + sizeof(add2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Addend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 add1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          add1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 add2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          add2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Addend::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculation.Addend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 add1 = 1;
  if (this->add1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_add1(), target);
  }

  // int32 add2 = 2;
  if (this->add2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_add2(), target);
  }

  // .google.protobuf.Timestamp last_updated = 3;
  if (this->has_last_updated()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::last_updated(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Calculation.Addend)
  return target;
}

size_t Addend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calculation.Addend)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp last_updated = 3;
  if (this->has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // int32 add1 = 1;
  if (this->add1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_add1());
  }

  // int32 add2 = 2;
  if (this->add2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_add2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Addend::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Calculation.Addend)
  GOOGLE_DCHECK_NE(&from, this);
  const Addend* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Addend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Calculation.Addend)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Calculation.Addend)
    MergeFrom(*source);
  }
}

void Addend::MergeFrom(const Addend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calculation.Addend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_last_updated()) {
    _internal_mutable_last_updated()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  if (from.add1() != 0) {
    _internal_set_add1(from._internal_add1());
  }
  if (from.add2() != 0) {
    _internal_set_add2(from._internal_add2());
  }
}

void Addend::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Calculation.Addend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Addend::CopyFrom(const Addend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calculation.Addend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Addend::IsInitialized() const {
  return true;
}

void Addend::InternalSwap(Addend* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Addend, add2_)
      + sizeof(Addend::add2_)
      - PROTOBUF_FIELD_OFFSET(Addend, last_updated_)>(
          reinterpret_cast<char*>(&last_updated_),
          reinterpret_cast<char*>(&other->last_updated_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Addend::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Sum::InitAsDefaultInstance() {
  ::Calculation::_Sum_default_instance_._instance.get_mutable()->last_updated_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Sum::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const Sum* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Sum::_Internal::last_updated(const Sum* msg) {
  return *msg->last_updated_;
}
void Sum::clear_last_updated() {
  if (GetArena() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
Sum::Sum(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Calculation.Sum)
}
Sum::Sum(const Sum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_last_updated()) {
    last_updated_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:Calculation.Sum)
}

void Sum::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Sum_calc_5fadd_2eproto.base);
  ::memset(&last_updated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&last_updated_)) + sizeof(num_));
}

Sum::~Sum() {
  // @@protoc_insertion_point(destructor:Calculation.Sum)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Sum::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete last_updated_;
}

void Sum::ArenaDtor(void* object) {
  Sum* _this = reinterpret_cast< Sum* >(object);
  (void)_this;
}
void Sum::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Sum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Sum& Sum::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Sum_calc_5fadd_2eproto.base);
  return *internal_default_instance();
}


void Sum::Clear() {
// @@protoc_insertion_point(message_clear_start:Calculation.Sum)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Sum::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Sum::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculation.Sum)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  // .google.protobuf.Timestamp last_updated = 2;
  if (this->has_last_updated()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::last_updated(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Calculation.Sum)
  return target;
}

size_t Sum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calculation.Sum)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp last_updated = 2;
  if (this->has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // int32 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sum::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Calculation.Sum)
  GOOGLE_DCHECK_NE(&from, this);
  const Sum* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Sum>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Calculation.Sum)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Calculation.Sum)
    MergeFrom(*source);
  }
}

void Sum::MergeFrom(const Sum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calculation.Sum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_last_updated()) {
    _internal_mutable_last_updated()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void Sum::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Calculation.Sum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sum::CopyFrom(const Sum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calculation.Sum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sum::IsInitialized() const {
  return true;
}

void Sum::InternalSwap(Sum* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Sum, num_)
      + sizeof(Sum::num_)
      - PROTOBUF_FIELD_OFFSET(Sum, last_updated_)>(
          reinterpret_cast<char*>(&last_updated_),
          reinterpret_cast<char*>(&other->last_updated_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Sum::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Calculation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Calculation::Num* Arena::CreateMaybeMessage< ::Calculation::Num >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Calculation::Num >(arena);
}
template<> PROTOBUF_NOINLINE ::Calculation::Addend* Arena::CreateMaybeMessage< ::Calculation::Addend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Calculation::Addend >(arena);
}
template<> PROTOBUF_NOINLINE ::Calculation::Sum* Arena::CreateMaybeMessage< ::Calculation::Sum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Calculation::Sum >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
